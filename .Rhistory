setwd("~/git/DATA621HW1")
df.training = read.csv('https://raw.githubusercontent.com/deepssquared/DATA621HW1/main/moneyball-training-data.csv')
#  head(df.training)
# Correlation
mat.correlation = cor(df.training, use = 'complete')
df.training
mat.correlation = cor(df.training, use = 'complete')
mat.correlation[upper.tri(mat.correlation)] = NA
install.packages("moments")
coef(lmod)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(reshape2)
library(knitr)
df.training = read_csv('moneyball-training-data.csv')
mat.correlation = cor(df.training, use = 'complete')
mat.correlation[upper.tri(mat.correlation)] = NA
mlt.correlation <- melt(mat.correlation)
ggplot(data = mlt.correlation, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 8, hjust = 1), axis.text.y = element_text(size = 8))+
coord_fixed()
mlt.training.plt = melt(select(df.training, -c("TARGET_WINS")), id.vars = c("INDEX"))
mlt.training.plt = merge(mlt.training.plt, select(df.training, c("INDEX", "TARGET_WINS")), by = "INDEX")
ggplot(data = mlt.training.plt, aes(value, TARGET_WINS)) + geom_point() + facet_wrap(~variable, scales = "free")
mlt.training = melt(df.training, id.vars = "INDEX")
ggplot(data = mlt.training, aes(value)) + geom_histogram() + facet_wrap(~variable, scales = "free")
mlt.training = melt(df.training, id.vars = "INDEX")
ggplot(data = mlt.training, aes(value)) + geom_histogram() + facet_wrap(~variable, scales = "free")
lmod <- lm(TARGET_WINS ~ TEAM_BATTING_H+TEAM_BATTING_2B+TEAM_BATTING_3B+TEAM_BATTING_HR+TEAM_BATTING_BB+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BASERUN_CS+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_PITCHING_HR+TEAM_PITCHING_BB+TEAM_PITCHING_SO+TEAM_FIELDING_E+TEAM_FIELDING_DP, df.training)
coef(lmod)
summary(lmod)
plot(lmod)
d<-density(lmod[['residuals']])
plot(d,main='Residual Plot',xlab='Residual value')
plot(ecdf(lmod[['residuals']]))
lmodel <- lm(log(TARGET_WINS) ~ TEAM_BATTING_H+TEAM_BATTING_2B+TEAM_BATTING_3B+TEAM_BATTING_HR+TEAM_BATTING_BB+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BASERUN_CS+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_PITCHING_HR+TEAM_PITCHING_BB+TEAM_PITCHING_SO+TEAM_FIELDING_E+TEAM_FIELDING_DP, df.training)
library(moments)
skewness(lmodel$residuals)
summary(lmodel)
plot(lmodel)
ld<-density(lmodel[['residuals']])
plot(ld,main='Residual Plot',xlab='Residual value')
l2model <- lm(sqrt(TARGET_WINS) ~ ., df.training)
summary(l2model)
par(mfrow= c(2,1))
hist(l2model$residuals)
qqnorm(l2model$residuals)
qqline(l2model$residuals)
#plot(l2model)
library(moments)
skewness(l2model$residuals)
library(MASS)
model0 <- lm(TARGET_WINS ~ TEAM_BATTING_H+TEAM_BATTING_2B+TEAM_BATTING_3B+TEAM_BATTING_HR+TEAM_BATTING_BB+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BASERUN_CS+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_PITCHING_HR+TEAM_PITCHING_BB+TEAM_PITCHING_SO+TEAM_FIELDING_E+TEAM_FIELDING_DP, df.training)
model <- lm(sqrt(TARGET_WINS) ~ TEAM_BATTING_H+TEAM_BATTING_2B+TEAM_BATTING_3B+TEAM_BATTING_HR+TEAM_BATTING_BB+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BASERUN_CS+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_PITCHING_HR+TEAM_PITCHING_BB+TEAM_PITCHING_SO+TEAM_FIELDING_E+TEAM_FIELDING_DP, df.training)
y <- df.training$TARGET_WINS
x <-  df.training$TEAM_BATTING_H + df.training$TEAM_BATTING_2B + df.training$TEAM_BATTING_3B + df.training$TEAM_BATTING_HR + df.training$TEAM_BATTING_BB + df.training$TEAM_BATTING_SO + df.training$TEAM_BASERUN_SB + df.training$TEAM_BASERUN_CS + df.training$TEAM_BATTING_HBP + df.training$TEAM_PITCHING_H + df.training$TEAM_PITCHING_HR + df.training$TEAM_PITCHING_BB + df.training$TEAM_PITCHING_SO + df.training$TEAM_FIELDING_E + df.training$TEAM_FIELDING_DP
#find optimal lambda for Box-Cox transformation
bc_model <- boxcox(y ~ x)
(lambda <- bc_model$x[which.max(bc_model$y)])
#fit new linear regression model using the Box-Cox transformation
new_model <- lm(((y^lambda-1)/lambda) ~ x)
summary(new_model)
################################################
#define plotting area
op <- par(pty = "s", mfrow = c(1, 3))
#Q-Q plot for original model
qqnorm(model0$residuals)
qqline(model0$residuals)
#Q-Q plot for sqrt model
qqnorm(model$residuals)
qqline(model$residuals)
#Q-Q plot for Box-Cox transformed model
qqnorm(new_model$residuals)
qqline(new_model$residuals)
#display both Q-Q plots
par(op)
library(MASS)
y1 <- df.training$TARGET_WINS
x1 <- df.training$TEAM_BATTING_H + df.training$TEAM_BATTING_2B
lmodel <- lm(log(TARGET_WINS) ~ TEAM_BATTING_H+TEAM_BATTING_2B+TEAM_BATTING_3B+TEAM_BATTING_HR+TEAM_BATTING_BB+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BASERUN_CS+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_PITCHING_HR+TEAM_PITCHING_BB+TEAM_PITCHING_SO+TEAM_FIELDING_E+TEAM_FIELDING_DP, df.training)
library(moments)
skewness(lmodel$residuals)
summary(lmodel)
par(mfrow = c(1, 3))
plot(lmodel)
lmodel <- lm(log(TARGET_WINS) ~ TEAM_BATTING_H+TEAM_BATTING_2B+TEAM_BATTING_3B+TEAM_BATTING_HR+TEAM_BATTING_BB+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BASERUN_CS+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_PITCHING_HR+TEAM_PITCHING_BB+TEAM_PITCHING_SO+TEAM_FIELDING_E+TEAM_FIELDING_DP, df.training)
library(moments)
skewness(lmodel$residuals)
summary(lmodel)
par(mfrow = c(2, 3))
plot(lmodel)
lmodel <- lm(log(TARGET_WINS) ~ TEAM_BATTING_H+TEAM_BATTING_2B+TEAM_BATTING_3B+TEAM_BATTING_HR+TEAM_BATTING_BB+TEAM_BATTING_SO+TEAM_BASERUN_SB+TEAM_BASERUN_CS+TEAM_BATTING_HBP+TEAM_PITCHING_H+TEAM_PITCHING_HR+TEAM_PITCHING_BB+TEAM_PITCHING_SO+TEAM_FIELDING_E+TEAM_FIELDING_DP, df.training)
library(moments)
skewness(lmodel$residuals)
summary(lmodel) %>% kable()
(lmodel) %>% kable()
(lmodel) %>%   tidy() %>% kable()
?tidy
(lmodel) %>%   tidy() %>% kable()
(lmodel) %>%   broom::tidy() %>% kable()
lmodel %>%   broom::tidy() %>% kable()
par(mfrow= c(2,2))
hist(l2model$residuals)
qqnorm(l2model$residuals)
qqline(l2model$residuals)
